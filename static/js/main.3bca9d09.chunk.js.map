{"version":3,"sources":["logo.svg","components/Header/Header.js","services/axios.js","components/Body/Table/Table.js","components/Body/Body.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","width","src","logo","alt","Component","request","axios","create","baseURL","getAll","a","get","then","response","data","SweetAlert","withSwalInstance","swal","Table","props","clearForm","setState","selectedPlayers","state","players","name","age","selectedPosition","showErrorStatus","showErrorMsg","showErrorTitle","positions","fetchPlayers","onSubmit","bind","API","results","this","map","d","putPositionInList","key","ageCalculator","position","push","Array","from","Set","unshift","value","e","preventDefault","refs","filterByName","filterByPosition","filterByAge","test","filter","p","toLowerCase","includes","toString","length","dateOfBirth","list","playerList","positionList","show","title","text","onConfirm","type","placeholder","ref","pattern","min","max","onClick","dob","today","Date","birthDate","age_now","getFullYear","m","getMonth","getDate","Body","Footer","href","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bca9d09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport './Header.css';\n\n// Logo\nimport logo from './../../logo.svg';\n\nclass Header extends Component{\n    render() {\n        return(\n            <nav className=\"navbar navbar-expand-lg mb-3\">\n                <div className=\"navbar-brand text-capitalize text-light\">\n                    <img width=\"60vh\" src={logo} className=\"App-logo\" alt=\"logo\" />\n                    Football Player list\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Header;\n","import axios from 'axios/dist/axios';\n\nconst BASE_URL = 'https://football-players-b31f2.firebaseio.com/players.json';\nconst request = axios.create({\n    baseURL: BASE_URL\n});\n\nclass Api {\n    // Fetch all players\n    getAll= async () => request.get()\n        .then(function (response) {\n\n            // handle success\n            return response.data;\n        });\n}\n\n// Exporting a new Api object to be used\nexport default new Api();\n","import React, {Component} from 'react';\n\n// SweetAlert\nimport { withSwalInstance } from 'sweetalert2-react';\nimport swal from 'sweetalert2';\n\n// Css\nimport './Table.css'\n\n// Services\nimport API from '../../../services/axios';\n\nconst SweetAlert = withSwalInstance(swal);\n\nclass Table extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            showErrorStatus: false,\n            showErrorMsg: '',\n            showErrorTitle: '',\n            name: '',\n            age: '',\n            players: [],\n            positions: [],\n            selectedPosition: '',\n            selectedPlayers: [],\n        };\n        this.fetchPlayers();\n\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    // Fetch player from external resource\n    async fetchPlayers() {\n        let results = await API.getAll().then(data => {\n                return data;\n            }\n        );\n        this.setState({\n            selectedPlayers: results\n        });\n        this.setState({\n            players: results\n        });\n    }\n\n    // Set Player List\n    playerList(){\n        const players = this.state.selectedPlayers;\n        return players.map(d => {\n            this.putPositionInList( d['position'] );\n            return <tr key={ d['jerseyNumber'] }>\n                <td>{ d['name'] }</td>\n                <td>{ d['position'] }</td>\n                <td>{ d['nationality'] }</td>\n                <td>{ Table.ageCalculator( d['dateOfBirth'] ) }</td>\n            </tr>;\n        });\n    }\n\n    // Put a position into positions array\n    putPositionInList(position) {\n        this.state.positions.push(position);\n    }\n\n    // Build a options to put on select input\n    positionList() {\n        let positions = Array.from(new Set(this.state.positions));\n\n        positions.unshift([]);\n\n        return positions.map(position => {\n           return <option key={ position } value={ position }>{ position }</option>\n        });\n    }\n\n    // Calculate the age of each player using your dob (date of birth)\n    static ageCalculator(dob) {\n        const today = new Date();\n        const birthDate = new Date(dob);\n        let age_now = today.getFullYear() - birthDate.getFullYear();\n        const m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate()))\n        { age_now--; }\n        return age_now;\n    }\n\n    // Clear form\n    clearForm = () => {\n        this.setState({\n            selectedPlayers: this.state.players,\n            name:'',\n            age:'',\n            selectedPosition:''\n        })\n    };\n\n    // Submit form\n    onSubmit(e) {\n        e.preventDefault();\n        this.setState({\n            name: this.refs.name.value,\n            age: this.refs.age.value,\n            selectedPosition: this.refs.position.value,\n            selectedPlayers: this.state.players\n        });\n\n        // Filter by name\n        this.filterByName(this.refs.name.value);\n\n        // Filter by Position\n        this.filterByPosition(this.refs.position.value);\n\n        // Filter by age\n        this.filterByAge(this.refs.age.value)\n    }\n\n    // Filter by name on selected Players\n    filterByName(name) {\n        // return null if name is empty\n        if (name === '') {\n            this.setState({ showErrorMsg: false });\n            return null;\n        }\n\n        // Validate name is string without numbers\n        const nameRegex = /[a-zA-Z]/;\n        if (!nameRegex.test(name)) {\n            this.setState({\n                showErrorMsg: 'Name must be a string',\n                showErrorTitle: 'Error',\n                showErrorStatus: true,\n            });\n            return null;\n        }\n\n        let players = this.state.players.filter(p => {\n            return p.name.toLowerCase().includes(name.toLowerCase())\n        });\n        this.setState({\n            selectedPlayers: players\n        });\n\n    }\n\n    // Filter by position on selected players\n    filterByPosition(position) {\n        // return null if position is empty\n        if (position === '') {\n            return null;\n        }\n\n        let players = this.state.selectedPlayers.filter(p => {\n            return position.toString().toLowerCase() === p.position.toString().toLowerCase();\n        });\n        this.setState({\n            selectedPlayers: players\n        });\n\n        // Validate if exists position into position list\n        if (players.length <= 0) {\n            this.setState({\n                showErrorMsg: 'Position must be into Position List',\n                showErrorTitle: 'Error',\n                showErrorStatus: true,\n            });\n            return null;\n        }\n\n    }\n\n    // Filter by age on selected players\n    filterByAge(age) {\n        // return null if age is empty\n        if (age === '') {\n            return null;\n        }\n\n        // Validate name is string without numbers\n        const ageRegex = /[0-9]/;\n        if (!ageRegex.test(age)) {\n            this.setState({\n                showErrorMsg: 'Age must be a number',\n                showErrorTitle: 'Error',\n                showErrorStatus: true,\n            });\n            return null;\n        }\n\n\n        let players = this.state.selectedPlayers.filter(a => {\n            return age === Table.ageCalculator(a.dateOfBirth).toString()\n        });\n        this.setState({\n            selectedPlayers: players\n        });\n\n    }\n\n    // Render component\n    render() {\n        // Get Lists\n        const list = this.playerList();\n        const positions = this.positionList();\n\n        // Render component\n        return(\n            <div>\n                <SweetAlert\n                    show={this.state.showErrorStatus}\n                    title={this.state.showErrorTitle}\n                    text={this.state.showErrorMsg}\n                    onConfirm={() => this.setState({ showErrorStatus: false })} />\n                <div className=\"row mb-4\">\n                    <form className=\"container form-player\" onSubmit={this.onSubmit}>\n                        <div className=\"col-sm-12 col-md-3 col-xl-3 col-lg-3 p-2\">\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Player name\" ref=\"name\" pattern=\"[a-zA-Z]*\"/>\n                                <label className=\"annotation\">Must be String</label>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-12 col-md-3 col-xl-3 col-lg-3 p-2\">\n                            <div className=\"form-group\">\n                                <select className=\"form-control\" placeholder=\"Position\" ref=\"position\">\n                                    { positions }\n                                </select>\n                                <label className=\"annotation\">Must be listed</label>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-12 col-md-3 col-xl-3 col-lg-3 p-2\">\n                            <div className=\"form-group\">\n                                <input type=\"number\" className=\"form-control\" placeholder=\"Age\" ref=\"age\" min=\"18\" max=\"45\" pattern=\"[0-9]*\"/>\n                                <label className=\"annotation\">Must be numeric between 18 - 45</label>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-12 col-md-3 col-xl-3 col-lg-3 p-2\">\n                            <button type=\"reset\" className=\"btn btn-outline-danger mr-2\" onClick={this.clearForm}>Clear Fields</button>\n                            <button type=\"submit\" className=\"btn btn-outline-info\">Search</button>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"row\">\n                    <p className=\"showing-results col-sm-12 col-md-3 offset-md-9\">\n                        Showing { this.state.selectedPlayers.length } results  of { this.state.players.length }\n                    </p>\n                    <div className=\"table-responsive\">\n                        <table className=\"table table-striped table-hover\">\n                            <thead>\n                            <tr>\n                                <td className=\"col-with-quarter\"> Player</td>\n                                <td className=\"col-with-quarter\"> Position</td>\n                                <td className=\"col-with-quarter\"> Nationality</td>\n                                <td className=\"col-with-quarter\"> Age</td>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            { list }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// Exporting Main class Table\nexport default Table;\n","import React, { Component } from 'react';\n\n// Css\nimport './Body.css';\n\n// Sub-components\nimport Table from \"./Table/Table\";\n\nclass Body extends Component {\n\n    // Render component\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4>Players Available</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <Table />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// Exporting main class Body\nexport default Body;\n","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component{\n    render() {\n        return(\n            <footer className=\"text-white border-bottom-0\">\n                <span>This app was a test provided by <a href=\"https://invite.com/\" target=\"_blank\"\n                                                                        rel=\"noopener noreferrer\">Invite.com</a></span><br/>\n                <span>Developed by <a href=\"mailto:helg18@gmail.com\" target=\"_blank\"\n                                          rel=\"noopener noreferrer\">Henry Leon</a></span>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\n\n// App Partials\nimport Header from \"./components/Header/Header\";\nimport Body from \"./components/Body/Body\";\nimport Footer from \"./components/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <Body />\n        <Footer />\n     </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Third Integrations\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}